import"./modulepreload-polyfill-B5Qt9EMX.js";import{C as S}from"./cpf-validator-B4PsRAE6.js";import{D as $}from"./database-CTJo1PQf.js";class k{constructor(){this.dbService=new $,this.leads=[],this.filteredLeads=[],this.selectedLeads=new Set,this.currentPage=1,this.leadsPerPage=20,this.isLoggedIn=!1,this.systemMode="auto",this.bulkData=[],this.bulkResults=null,this.editingLead=null,console.log("🔧 AdminPanel inicializado - Modo Local"),this.init()}async init(){console.log("🚀 Inicializando painel administrativo...");try{this.setupEventListeners(),this.checkLoginStatus(),this.isLoggedIn&&(this.loadLeads(),this.renderLeadsTable(),this.updateLeadsCount()),console.log("✅ Painel administrativo inicializado com sucesso")}catch(e){console.error("❌ Erro na inicialização do painel:",e)}}setupEventListeners(){const e=document.getElementById("loginForm");e&&e.addEventListener("submit",u=>this.handleLogin(u));const t=document.getElementById("logoutButton");t&&t.addEventListener("click",()=>this.handleLogout());const a=document.getElementById("showLeadsView");a&&a.addEventListener("click",()=>this.showView("leadsView"));const o=document.getElementById("showAddLeadView");o&&o.addEventListener("click",()=>this.showView("addLeadView"));const s=document.getElementById("showBulkAddView");s&&s.addEventListener("click",()=>this.showView("bulkAddView"));const d=document.getElementById("addLeadForm");d&&d.addEventListener("submit",u=>this.handleAddLead(u));const i=document.getElementById("previewBulkDataButton");i&&i.addEventListener("click",()=>this.previewBulkData());const n=document.getElementById("clearBulkDataButton");n&&n.addEventListener("click",()=>this.clearBulkData());const r=document.getElementById("confirmBulkImportButton");r&&r.addEventListener("click",()=>this.confirmBulkImport());const c=document.getElementById("editBulkDataButton");c&&c.addEventListener("click",()=>this.editBulkData());let l=document.getElementById("refreshButton");l&&l.addEventListener("click",()=>this.refreshLeads());const p=document.getElementById("applyFiltersButton");p&&p.addEventListener("click",()=>this.applyFilters());const m=document.getElementById("massNextStage");m&&m.addEventListener("click",()=>this.handleMassAction("nextStage"));const g=document.getElementById("massPrevStage");g&&g.addEventListener("click",()=>this.handleMassAction("prevStage"));const h=document.getElementById("massSetStage");h&&h.addEventListener("click",()=>this.handleMassAction("setStage"));const f=document.getElementById("massDeleteLeads");f&&f.addEventListener("click",()=>this.handleMassAction("delete"));const y=document.getElementById("nextAllButton");y&&y.addEventListener("click",()=>this.handleSystemAction("nextAll"));const L=document.getElementById("prevAllButton");L&&L.addEventListener("click",()=>this.handleSystemAction("prevAll")),l=document.getElementById("refreshButton"),l&&l.addEventListener("click",()=>this.handleSystemAction("refresh"));const E=document.getElementById("clearAllButton");E&&E.addEventListener("click",()=>this.handleSystemAction("clearAll"));const v=document.getElementById("closeEditModal");v&&v.addEventListener("click",()=>this.closeEditModal());const b=document.getElementById("cancelEdit");b&&b.addEventListener("click",()=>this.closeEditModal());const x=document.getElementById("editForm");x&&x.addEventListener("submit",u=>this.handleEditSubmit(u))}checkLoginStatus(){localStorage.getItem("admin_logged_in")==="true"?(this.isLoggedIn=!0,this.showAdminPanel()):this.showLoginScreen()}handleLogin(e){e.preventDefault(),this.isLoggedIn=!0,localStorage.setItem("admin_logged_in","true"),this.showAdminPanel(),this.loadLeads()}handleLogout(){this.isLoggedIn=!1,localStorage.removeItem("admin_logged_in"),this.showLoginScreen()}showLoginScreen(){const e=document.getElementById("loginScreen"),t=document.getElementById("adminPanel");e&&(e.style.display="flex"),t&&(t.style.display="none")}showAdminPanel(){const e=document.getElementById("loginScreen"),t=document.getElementById("adminPanel");e&&(e.style.display="none"),t&&(t.style.display="block"),this.showView("leadsView")}showView(e){document.querySelectorAll(".admin-view").forEach(d=>{d.style.display="none"}),document.querySelectorAll(".nav-button").forEach(d=>{d.classList.remove("active")});const o=document.getElementById(e);o&&(o.style.display="block");const s=document.getElementById(`show${e.charAt(0).toUpperCase()+e.slice(1)}`);s&&s.classList.add("active")}loadLeads(){try{console.log("📊 Carregando leads do localStorage...");const e=localStorage.getItem("leads");this.leads=e?JSON.parse(e):[],this.filteredLeads=[...this.leads],console.log(`📦 ${this.leads.length} leads carregados do localStorage`),this.renderLeadsTable(),this.updateLeadsCount()}catch(e){console.error("❌ Erro ao carregar leads do localStorage:",e),this.leads=[],this.filteredLeads=[],this.renderLeadsTable(),this.updateLeadsCount()}}handleAddLead(e){var o,s,d,i,n,r,c,l;e.preventDefault();const t=new FormData(e.target),a={nome_completo:t.get("nome")||((o=document.getElementById("addLeadNome"))==null?void 0:o.value),cpf:(d=t.get("cpf")||((s=document.getElementById("addLeadCPF"))==null?void 0:s.value))==null?void 0:d.replace(/[^\d]/g,""),email:t.get("email")||((i=document.getElementById("addLeadEmail"))==null?void 0:i.value),telefone:t.get("telefone")||((n=document.getElementById("addLeadTelefone"))==null?void 0:n.value),endereco:this.buildAddress(t),produtos:[{nome:t.get("produto")||((r=document.getElementById("addLeadProduto"))==null?void 0:r.value)||"Kit 12 caixas organizadoras + brinde",preco:parseFloat(t.get("valor")||((c=document.getElementById("addLeadValor"))==null?void 0:c.value)||0)}],valor_total:parseFloat(t.get("valor")||((l=document.getElementById("addLeadValor"))==null?void 0:l.value)||0),meio_pagamento:"PIX",origem:"direto",etapa_atual:1,status_pagamento:"pendente",order_bumps:[],data_compra:new Date().toISOString(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()};this.saveLeadToLocalStorage(a),this.loadLeads(),this.showView("leadsView"),e.target.reset(),this.showNotification("Lead criado com sucesso!","success")}saveLeadToLocalStorage(e){try{const t=JSON.parse(localStorage.getItem("leads")||"[]");e.id=Date.now().toString(),t.push(e),localStorage.setItem("leads",JSON.stringify(t)),console.log("✅ Lead salvo no localStorage")}catch(t){console.error("❌ Erro ao salvar lead:",t)}}buildAddress(e){var c,l,p,m,g,h,f,y;const t=e.get("endereco")||((c=document.getElementById("addLeadEndereco"))==null?void 0:c.value)||"",a=e.get("numero")||((l=document.getElementById("addLeadNumero"))==null?void 0:l.value)||"",o=e.get("complemento")||((p=document.getElementById("addLeadComplemento"))==null?void 0:p.value)||"",s=e.get("bairro")||((m=document.getElementById("addLeadBairro"))==null?void 0:m.value)||"",d=e.get("cep")||((g=document.getElementById("addLeadCEP"))==null?void 0:g.value)||"",i=e.get("cidade")||((h=document.getElementById("addLeadCidade"))==null?void 0:h.value)||"",n=e.get("estado")||((f=document.getElementById("addLeadEstado"))==null?void 0:f.value)||"",r=e.get("pais")||((y=document.getElementById("addLeadPais"))==null?void 0:y.value)||"BR";return`${t}, ${a}${o?` - ${o}`:""} - ${s} - ${i}/${n} - CEP: ${d} - ${r}`}previewBulkData(){const e=document.getElementById("bulkDataTextarea");if(!e||!e.value.trim()){this.showNotification("Por favor, cole os dados na caixa de texto","error");return}try{this.bulkData=this.parseBulkData(e.value),this.displayBulkPreview()}catch(t){console.error("❌ Erro ao processar dados:",t),this.showNotification("Erro ao processar dados: "+t.message,"error")}}parseBulkData(e){const t=e.trim().split(`
`).filter(d=>d.trim()),a=[],o=new Set,s=[];for(let d=0;d<t.length;d++){const i=t[d].trim();if(!i)continue;const n=i.split(/\t+|\s{2,}/).map(I=>I.trim());if(n.length<4){console.warn(`Linha ${d+1} ignorada: poucos campos`);continue}const[r,c,l,p,m,g,h,f,y,L,E,v,b,x]=n,u=(p||"").replace(/[^\d]/g,"");if(o.has(u)){s.push({nome:r,cpf:u});continue}o.add(u);const B=this.buildAddressFromFields({rua:h||"",numero:f||"",complemento:y||"",bairro:L||"",cep:E||"",cidade:v||"",estado:b||"",pais:x||"BR"});a.push({nome_completo:r||"",email:c||"",telefone:l||"",cpf:u,produto:m||"Kit 12 caixas organizadoras + brinde",valor_total:parseFloat(g)||67.9,endereco:B,meio_pagamento:"PIX",origem:"direto",etapa_atual:1,status_pagamento:"pendente",order_bumps:[],produtos:[{nome:m||"Kit 12 caixas organizadoras + brinde",preco:parseFloat(g)||67.9}],lineNumber:d+1})}return console.log(`📊 Dados processados: ${a.length} leads, ${s.length} duplicatas removidas`),{leads:a,duplicatesRemoved:s}}buildAddressFromFields({rua:e,numero:t,complemento:a,bairro:o,cep:s,cidade:d,estado:i,pais:n}){return`${e}, ${t}${a?` - ${a}`:""} - ${o} - ${d}/${i} - CEP: ${s} - ${n}`}displayBulkPreview(){const e=document.getElementById("bulkPreviewSection"),t=document.getElementById("bulkPreviewContainer"),a=document.getElementById("confirmBulkImportButton"),o=document.getElementById("previewSummary");if(!e||!t)return;e.style.display="block";let s=`
            <table style="width: 100%; border-collapse: collapse; font-size: 12px;">
                <thead>
                    <tr style="background: #f8f9fa;">
                        <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Nome</th>
                        <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Email</th>
                        <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Telefone</th>
                        <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">CPF</th>
                        <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Produto</th>
                        <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Valor</th>
                    </tr>
                </thead>
                <tbody>
        `;this.bulkData.leads.forEach((d,i)=>{const n=i%2===0?"background: #f9f9f9;":"";s+=`
                <tr style="${n}">
                    <td style="padding: 6px; border: 1px solid #ddd;">${d.nome_completo}</td>
                    <td style="padding: 6px; border: 1px solid #ddd;">${d.email}</td>
                    <td style="padding: 6px; border: 1px solid #ddd;">${d.telefone}</td>
                    <td style="padding: 6px; border: 1px solid #ddd;">${S.formatCPF(d.cpf)}</td>
                    <td style="padding: 6px; border: 1px solid #ddd;">${d.produto}</td>
                    <td style="padding: 6px; border: 1px solid #ddd;">R$ ${d.valor_total.toFixed(2)}</td>
                </tr>
            `}),s+="</tbody></table>",this.bulkData.duplicatesRemoved.length>0&&(s+=`
                <div style="margin-top: 15px; padding: 10px; background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 4px;">
                    <strong>📋 Duplicatas Removidas (${this.bulkData.duplicatesRemoved.length}):</strong>
                    <ul style="margin: 5px 0 0 20px;">
                        ${this.bulkData.duplicatesRemoved.map(d=>`<li>${d.nome} - CPF: ${this.formatCPF(d.cpf)}</li>`).join("")}
                    </ul>
                </div>
            `),t.innerHTML=s,o&&(o.textContent=`${this.bulkData.leads.length} leads para importar${this.bulkData.duplicatesRemoved.length>0?`, ${this.bulkData.duplicatesRemoved.length} duplicatas removidas`:""}`),a&&(a.style.display="inline-block")}async confirmBulkImport(){if(!this.bulkData||!this.bulkData.leads.length){this.showNotification("Nenhum dado para importar","error");return}const e=document.getElementById("confirmBulkImportButton");if(!e)return;const t=e.innerHTML;e.innerHTML='<i class="fas fa-spinner fa-spin"></i> Importando...',e.disabled=!0;try{const a=await this.processBulkImport();this.displayBulkResults(a)}catch(a){console.error("❌ Erro na importação em massa:",a),this.showNotification("Erro na importação: "+a.message,"error")}finally{e.innerHTML=t,e.disabled=!1}}processBulkImport(){const e={success:[],errors:[],total:this.bulkData.leads.length};return this.bulkData.leads.forEach(t=>{try{const a=this.validateLeadData(t);if(!a.isValid){e.errors.push({nome:t.nome_completo,cpf:t.cpf,error:a.error,type:"validation"});return}const o=JSON.parse(localStorage.getItem("leads")||"[]");if(o.find(d=>d.cpf===t.cpf)){e.errors.push({nome:t.nome_completo,cpf:t.cpf,error:"CPF já existe no sistema",type:"duplicate"});return}t.id=Date.now().toString()+Math.random().toString(36).substr(2,9),o.push(t),localStorage.setItem("leads",JSON.stringify(o)),e.success.push({nome:t.nome_completo,cpf:t.cpf,id:t.id})}catch(a){e.errors.push({nome:t.nome_completo,cpf:t.cpf,error:a.message,type:"exception"})}}),e}validateLeadData(e){return!e.nome_completo||e.nome_completo.trim().length<2?{isValid:!1,error:"Nome completo é obrigatório (mínimo 2 caracteres)"}:!e.email||!this.isValidEmail(e.email)?{isValid:!1,error:"Email é obrigatório e deve ter formato válido"}:!e.telefone||e.telefone.length<10?{isValid:!1,error:"Telefone é obrigatório (mínimo 10 dígitos)"}:!e.cpf||e.cpf.length!==11?{isValid:!1,error:"CPF é obrigatório e deve ter 11 dígitos"}:this.isValidCPF(e.cpf)?{isValid:!0}:{isValid:!1,error:"CPF inválido (formato ou dígitos verificadores incorretos)"}}isValidCPF(e){const t=e.replace(/[^\d]/g,"");return!(t.length!==11||/^(\d)\1{10}$/.test(t))}isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}displayBulkResults(e){const t=document.getElementById("bulkResultsSection"),a=document.getElementById("bulkResultsContainer");if(!t||!a)return;t.style.display="block";let o=`
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
        `;o+=`
            <div style="background: #d4edda; border: 1px solid #c3e6cb; border-radius: 8px; padding: 20px;">
                <h4 style="color: #155724; margin-bottom: 15px; display: flex; align-items: center; gap: 8px;">
                    <i class="fas fa-check-circle"></i>
                    Pedidos Postados com Sucesso (${e.success.length})
                </h4>
        `,e.success.length>0?(o+='<ul style="margin: 0; padding-left: 20px; max-height: 200px; overflow-y: auto;">',e.success.forEach(i=>{o+=`<li style="margin-bottom: 5px; color: #155724;">
                    <strong>${i.nome}</strong> - CPF: ${S.formatCPF(i.cpf)}
                </li>`}),o+="</ul>",o+=`
                <div style="margin-top: 15px; text-align: center;">
                    <button id="goToLeadsListButton" style="
                        background: #28a745;
                        color: white;
                        border: none;
                        padding: 10px 20px;
                        border-radius: 6px;
                        cursor: pointer;
                        font-weight: 600;
                        transition: all 0.3s ease;
                    " onmouseover="this.style.background='#218838'" onmouseout="this.style.background='#28a745'">
                        <i class="fas fa-list"></i> Ir para Lista
                    </button>
                </div>
            `):o+='<p style="color: #856404; font-style: italic;">Nenhum pedido foi postado com sucesso.</p>',o+="</div>",o+=`
            <div style="background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px; padding: 20px;">
                <h4 style="color: #721c24; margin-bottom: 15px; display: flex; align-items: center; gap: 8px;">
                    <i class="fas fa-exclamation-triangle"></i>
                    Pedidos com Erro (${e.errors.length})
                </h4>
        `,e.errors.length>0?(o+=`
                <div style="max-height: 200px; overflow-y: auto;">
                    <table style="width: 100%; border-collapse: collapse; font-size: 12px;">
                        <thead>
                            <tr style="background: #f5c6cb;">
                                <th style="padding: 6px; border: 1px solid #f1b0b7; text-align: left;">Nome</th>
                                <th style="padding: 6px; border: 1px solid #f1b0b7; text-align: left;">CPF</th>
                                <th style="padding: 6px; border: 1px solid #f1b0b7; text-align: left;">Motivo do Erro</th>
                            </tr>
                        </thead>
                        <tbody>
            `,e.errors.forEach((i,n)=>{const r=n%2===0?"background: #fdf2f2;":"";o+=`
                    <tr style="${r}">
                        <td style="padding: 6px; border: 1px solid #f1b0b7;">${i.nome}</td>
                        <td style="padding: 6px; border: 1px solid #f1b0b7;">${this.formatCPF(i.cpf)}</td>
                        <td style="padding: 6px; border: 1px solid #f1b0b7; color: #721c24;">
                            <strong>${this.getErrorTypeLabel(i.type)}:</strong> ${i.error}
                        </td>
                    </tr>
                `}),o+="</tbody></table></div>"):o+='<p style="color: #155724; font-style: italic;">Nenhum erro encontrado! 🎉</p>',o+="</div></div>",o+=`
            <div style="background: #e2e3e5; border: 1px solid #d6d8db; border-radius: 8px; padding: 15px; text-align: center;">
                <h4 style="color: #383d41; margin-bottom: 10px;">📊 Resumo da Importação</h4>
                <div style="display: flex; justify-content: space-around; flex-wrap: wrap; gap: 15px;">
                    <div>
                        <strong style="color: #28a745;">${e.success.length}</strong>
                        <span style="color: #6c757d;"> Sucessos</span>
                    </div>
                    <div>
                        <strong style="color: #dc3545;">${e.errors.length}</strong>
                        <span style="color: #6c757d;"> Erros</span>
                    </div>
                    <div>
                        <strong style="color: #007bff;">${e.total}</strong>
                        <span style="color: #6c757d;"> Total Processados</span>
                    </div>
                    <div>
                        <strong style="color: #ffc107;">${this.bulkData.duplicatesRemoved.length}</strong>
                        <span style="color: #6c757d;"> Duplicatas Removidas</span>
                    </div>
                </div>
            </div>
        `,a.innerHTML=o;const s=document.getElementById("goToLeadsListButton");s&&s.addEventListener("click",()=>{this.showView("leadsView"),this.refreshLeads()});const d=document.getElementById("bulkPreviewSection");d&&(d.style.display="none"),this.bulkResults=e}getErrorTypeLabel(e){return{validation:"Dados Inválidos",duplicate:"Duplicidade",database:"Erro de Banco",exception:"Erro Interno"}[e]||"Erro"}clearBulkData(){const e=document.getElementById("bulkDataTextarea"),t=document.getElementById("bulkPreviewSection"),a=document.getElementById("bulkResultsSection");e&&(e.value=""),t&&(t.style.display="none"),a&&(a.style.display="none"),this.bulkData=[],this.bulkResults=null}editBulkData(){const e=document.getElementById("bulkPreviewSection");e&&(e.style.display="none");const t=document.getElementById("bulkDataTextarea");t&&t.focus()}refreshLeads(){console.log("🔄 Atualizando lista de leads..."),this.loadLeads(),this.showNotification("Lista atualizada com sucesso!","success")}applyFilters(){console.log("🔍 Aplicando filtros...");const e=document.getElementById("searchInput"),t=document.getElementById("dateFilter"),a=document.getElementById("stageFilter"),o=e?e.value.toLowerCase().trim():"",s=t?t.value:"",d=a?a.value:"all";console.log("Filtros aplicados:",{searchTerm:o,dateValue:s,stageValue:d}),this.filteredLeads=this.leads.filter(i=>{if(o){const n=(i.nome_completo||"").toLowerCase().includes(o),r=(i.cpf||"").replace(/[^\d]/g,"").includes(o.replace(/[^\d]/g,""));if(!n&&!r)return!1}if(s){const n=new Date(i.created_at),r=new Date(s);if(n.toDateString()!==r.toDateString())return!1}return!(d!=="all"&&(i.etapa_atual||1).toString()!==d)}),console.log(`Filtros aplicados: ${this.filteredLeads.length} de ${this.leads.length} leads`),this.currentPage=1,this.renderLeadsTable(),this.updateLeadsCount(),this.showNotification(`Filtros aplicados: ${this.filteredLeads.length} leads encontrados`,"info")}async handleSystemAction(e){console.log(`🔧 Executando ação do sistema: ${e}`);let t;if(e==="nextAll"||e==="prevAll"||e==="clearAll"?(this.applyFilters(),t=this.filteredLeads):t=this.leads.filter(a=>this.selectedLeads.has(a.id||a.cpf)),e==="refresh"){this.showLoadingButton("refreshButton","Atualizando...");try{this.refreshLeads(),this.showNotification("Lista atualizada com sucesso!","success")}finally{this.hideLoadingButton("refreshButton",'<i class="fas fa-sync"></i> Atualizar Lista')}return}if(e==="clearAll"){if(t.length===0){this.showNotification("Nenhum lead encontrado com os filtros aplicados","error");return}if(!confirm(`Tem certeza que deseja excluir ${t.length} leads filtrados? Esta ação é irreversível.`))return;this.showLoadingButton("clearAllButton","Excluindo...");try{await this.deleteFilteredLeads(t),this.showNotification(`${t.length} leads excluídos com sucesso!`,"success")}catch(o){console.error("❌ Erro ao excluir leads:",o),this.showNotification("Erro ao excluir leads: "+o.message,"error")}finally{this.hideLoadingButton("clearAllButton",'<i class="fas fa-trash"></i> Limpar Todos')}return}if(e==="nextAll"||e==="prevAll"){if(t.length===0){this.showNotification("Nenhum lead encontrado com os filtros aplicados","error");return}const a=e==="nextAll"?"avançar":"voltar",o=e==="nextAll"?"nextAllButton":"prevAllButton",s=e==="nextAll"?'<i class="fas fa-forward"></i> Avançar Todos':'<i class="fas fa-backward"></i> Voltar Todos';if(!confirm(`Tem certeza que deseja ${a} ${t.length} leads filtrados?`))return;this.showLoadingButton(o,`${a==="avançar"?"Avançando":"Voltando"}...`);try{const i=e==="nextAll"?1:-1;await this.updateFilteredLeadsStage(t,i),this.showNotification(`${t.length} leads ${a==="avançar"?"avançados":"voltados"} com sucesso!`,"success")}catch(i){console.error(`❌ Erro ao ${a} leads:`,i),this.showNotification(`Erro ao ${a} leads: `+i.message,"error")}finally{this.hideLoadingButton(o,s)}}}showLoadingButton(e,t){const a=document.getElementById(e);a&&(a.dataset.originalText=a.innerHTML,a.innerHTML=`<i class="fas fa-spinner fa-spin"></i> ${t}`,a.disabled=!0)}hideLoadingButton(e,t){const a=document.getElementById(e);a&&(a.innerHTML=t||a.dataset.originalText||a.innerHTML,a.disabled=!1,delete a.dataset.originalText)}async updateFilteredLeadsStage(e,t){try{const a=JSON.parse(localStorage.getItem("leads")||"[]");let o=0;return e.forEach(s=>{const d=a.findIndex(i=>(i.id||i.cpf)===(s.id||s.cpf));if(d!==-1){const i=a[d].etapa_atual||1,n=Math.max(1,Math.min(26,i+t));n!==i&&(a[d].etapa_atual=n,a[d].updated_at=new Date().toISOString(),o++)}}),localStorage.setItem("leads",JSON.stringify(a)),this.loadLeads(),console.log(`✅ ${o} leads atualizados`),o}catch(a){throw console.error("❌ Erro ao atualizar etapas:",a),a}}async deleteFilteredLeads(e){try{const t=JSON.parse(localStorage.getItem("leads")||"[]"),a=e.map(s=>s.id||s.cpf),o=t.filter(s=>!a.includes(s.id||s.cpf));return localStorage.setItem("leads",JSON.stringify(o)),this.loadLeads(),console.log(`✅ ${e.length} leads excluídos`),e.length}catch(t){throw console.error("❌ Erro ao excluir leads:",t),t}}renderLeadsTable(){const e=document.getElementById("leadsTableBody"),t=document.getElementById("emptyState");if(!e)return;if(this.filteredLeads.length===0){e.innerHTML="",t&&(t.style.display="block");return}t&&(t.style.display="none");const a=(this.currentPage-1)*this.leadsPerPage,o=a+this.leadsPerPage,s=this.filteredLeads.slice(a,o);let d="";s.forEach(i=>{const n=this.selectedLeads.has(i.id||i.cpf),r=Array.isArray(i.produtos)?i.produtos:[],c=r.length>0?r[0].nome:"Produto não informado",l=this.formatCPF(i.cpf||"");d+=`
                <tr style="${n?"background-color: #e3f2fd;":""}">
                    <td>
                        <input type="checkbox" ${n?"checked":""} 
                               onchange="adminPanel.toggleLeadSelection('${i.id||i.cpf}', this.checked)">
                    </td>
                    <td>${i.nome_completo||"N/A"}</td>
                    <td>${l}</td>
                    <td>${i.email||"N/A"}</td>
                    <td>${i.telefone||"N/A"}</td>
                    <td>${c}</td>
                    <td>R$ ${(i.valor_total||0).toFixed(2)}</td>
                    <td>${this.formatDate(i.created_at)}</td>
                    <td>
                        <span class="stage-badge ${this.getStageClass(i.etapa_atual)}">
                            ${i.etapa_atual||1}
                        </span>
                    </td>
                    <td>${this.formatDate(i.updated_at)}</td>
                    <td>
                        <div class="lead-actions">
                            <button class="action-button edit" onclick="adminPanel.editLead('${i.id||i.cpf}')">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="action-button next" onclick="adminPanel.nextStage('${i.id||i.cpf}')">
                                <i class="fas fa-forward"></i>
                            </button>
                            <button class="action-button prev" onclick="adminPanel.prevStage('${i.id||i.cpf}')">
                                <i class="fas fa-backward"></i>
                            </button>
                            <button class="action-button delete" onclick="adminPanel.deleteLead('${i.id||i.cpf}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `}),e.innerHTML=d,this.updateSelectedCount()}formatCPF(e){const t=e.replace(/[^\d]/g,"");return t.length<=11?t.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/,"$1.$2.$3-$4"):e}toggleLeadSelection(e,t){t?this.selectedLeads.add(e):this.selectedLeads.delete(e),this.updateSelectedCount()}toggleSelectAll(e){const t=document.querySelectorAll('#leadsTableBody input[type="checkbox"]');e?this.filteredLeads.forEach(a=>{this.selectedLeads.add(a.id||a.cpf)}):this.selectedLeads.clear(),t.forEach(a=>{a.checked=e}),this.renderLeadsTable(),this.updateSelectedCount()}updateSelectedCount(){const e=document.getElementById("selectedCount"),t=document.querySelectorAll(".mass-action-button"),a=document.querySelectorAll(".action-count"),o=this.selectedLeads.size;e&&(e.textContent=`${o} selecionados`),t.forEach(s=>{s.disabled=o===0,o===0?(s.style.opacity="0.5",s.style.cursor="not-allowed"):(s.style.opacity="1",s.style.cursor="pointer")}),a.forEach(s=>{s.textContent=`(${o} leads)`})}updateLeadsCount(){const e=document.getElementById("leadsCount");e&&(e.textContent=`${this.filteredLeads.length} leads`)}formatDate(e){if(!e)return"N/A";try{return new Date(e).toLocaleDateString("pt-BR",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"})}catch{return"Data inválida"}}getStageClass(e){return e>=26?"completed":e>=6?"pending":""}showNotification(e,t="info"){const a=document.createElement("div");switch(a.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            z-index: 9999;
            animation: slideInRight 0.3s ease;
        `,t){case"success":a.style.background="#28a745";break;case"error":a.style.background="#dc3545";break;default:a.style.background="#007bff"}a.textContent=e,document.body.appendChild(a),setTimeout(()=>{a.style.animation="slideOutRight 0.3s ease",setTimeout(()=>{a.parentNode&&a.remove()},300)},3e3)}async handleMassAction(e){if(this.selectedLeads.size===0){this.showNotification("Nenhum lead selecionado","error");return}switch(console.log(`🔧 Ação em massa: ${e} para ${this.selectedLeads.size} leads`),e){case"nextStage":await this.massNextStage();break;case"prevStage":await this.massPrevStage();break;case"setStage":await this.massSetStage();break;case"delete":await this.massDeleteLeads();break;default:console.warn("Ação não reconhecida:",e)}}async massNextStage(){if(this.selectedLeads.size===0){this.showNotification("Nenhum lead selecionado","error");return}const e=`Tem certeza que deseja avançar ${this.selectedLeads.size} lead(s) para a próxima etapa?`;if(confirm(e))try{const t=JSON.parse(localStorage.getItem("leads")||"[]");let a=0;this.selectedLeads.forEach(o=>{const s=t.findIndex(d=>(d.id||d.cpf)===o);if(s!==-1){const d=t[s].etapa_atual||1,i=Math.min(26,d+1);t[s].etapa_atual=i,t[s].updated_at=new Date().toISOString(),a++}}),localStorage.setItem("leads",JSON.stringify(t)),this.selectedLeads.clear(),this.loadLeads(),this.showNotification(`${a} lead(s) avançado(s) com sucesso!`,"success"),console.log(`✅ ${a} leads avançados para próxima etapa`)}catch(t){console.error("❌ Erro ao avançar leads:",t),this.showNotification("Erro ao avançar leads: "+t.message,"error")}}async massPrevStage(){if(this.selectedLeads.size===0){this.showNotification("Nenhum lead selecionado","error");return}const e=`Tem certeza que deseja retroceder ${this.selectedLeads.size} lead(s) para a etapa anterior?`;if(confirm(e))try{const t=JSON.parse(localStorage.getItem("leads")||"[]");let a=0;this.selectedLeads.forEach(o=>{const s=t.findIndex(d=>(d.id||d.cpf)===o);if(s!==-1){const d=t[s].etapa_atual||1,i=Math.max(1,d-1);t[s].etapa_atual=i,t[s].updated_at=new Date().toISOString(),a++}}),localStorage.setItem("leads",JSON.stringify(t)),this.selectedLeads.clear(),this.loadLeads(),this.showNotification(`${a} lead(s) retrocedido(s) com sucesso!`,"success"),console.log(`✅ ${a} leads retrocedidos para etapa anterior`)}catch(t){console.error("❌ Erro ao retroceder leads:",t),this.showNotification("Erro ao retroceder leads: "+t.message,"error")}}async massSetStage(){if(this.selectedLeads.size===0){this.showNotification("Nenhum lead selecionado","error");return}const e=prompt(`Digite a etapa desejada (1-26) para ${this.selectedLeads.size} lead(s):`);if(!e)return;const t=parseInt(e);if(isNaN(t)||t<1||t>26){this.showNotification("Etapa inválida. Digite um número entre 1 e 26.","error");return}const a=`Tem certeza que deseja definir a etapa ${t} para ${this.selectedLeads.size} lead(s)?`;if(confirm(a))try{const o=JSON.parse(localStorage.getItem("leads")||"[]");let s=0;this.selectedLeads.forEach(d=>{const i=o.findIndex(n=>(n.id||n.cpf)===d);i!==-1&&(o[i].etapa_atual=t,o[i].updated_at=new Date().toISOString(),s++)}),localStorage.setItem("leads",JSON.stringify(o)),this.selectedLeads.clear(),this.loadLeads(),this.showNotification(`${s} lead(s) definido(s) para etapa ${t} com sucesso!`,"success"),console.log(`✅ ${s} leads definidos para etapa ${t}`)}catch(o){console.error("❌ Erro ao definir etapa dos leads:",o),this.showNotification("Erro ao definir etapa dos leads: "+o.message,"error")}}async massDeleteLeads(){if(this.selectedLeads.size===0){this.showNotification("Nenhum lead selecionado","error");return}const e=`⚠️ ATENÇÃO: Tem certeza que deseja EXCLUIR ${this.selectedLeads.size} lead(s)?

Esta ação não pode ser desfeita!`;if(confirm(e))try{const t=JSON.parse(localStorage.getItem("leads")||"[]");let a=0;const o=t.filter(s=>{const d=s.id||s.cpf;return this.selectedLeads.has(d)?(a++,!1):!0});localStorage.setItem("leads",JSON.stringify(o)),this.selectedLeads.clear(),this.loadLeads(),this.showNotification(`${a} lead(s) excluído(s) com sucesso!`,"success"),console.log(`✅ ${a} leads excluídos`)}catch(t){console.error("❌ Erro ao excluir leads:",t),this.showNotification("Erro ao excluir leads: "+t.message,"error")}}async editLead(e){console.log(`✏️ Editando lead: ${e}`);try{const a=JSON.parse(localStorage.getItem("leads")||"[]").find(o=>(o.id||o.cpf)===e);if(!a){this.showNotification("Lead não encontrado","error");return}this.editingLead=a,this.populateEditForm(a),this.showEditModal()}catch(t){console.error("❌ Erro ao carregar lead para edição:",t),this.showNotification("Erro ao carregar dados do lead","error")}}populateEditForm(e){if(document.getElementById("editName").value=e.nome_completo||"",document.getElementById("editCPF").value=e.cpf||"",document.getElementById("editEmail").value=e.email||"",document.getElementById("editPhone").value=e.telefone||"",document.getElementById("editAddress").value=e.endereco||"",document.getElementById("editStage").value=e.etapa_atual||1,e.updated_at){const t=new Date(e.updated_at),a=new Date(t.getTime()-t.getTimezoneOffset()*6e4).toISOString().slice(0,16);document.getElementById("editStageDateTime").value=a}else{const t=new Date,a=new Date(t.getTime()-t.getTimezoneOffset()*6e4).toISOString().slice(0,16);document.getElementById("editStageDateTime").value=a}}showEditModal(){const e=document.getElementById("editModal");e&&(e.style.display="flex",document.body.style.overflow="hidden")}closeEditModal(){const e=document.getElementById("editModal");e&&(e.style.display="none",document.body.style.overflow="auto"),this.editingLead=null}async handleEditSubmit(e){if(e.preventDefault(),!this.editingLead){this.showNotification("Nenhum lead selecionado para edição","error");return}try{const t=new FormData(e.target),a={...this.editingLead,nome_completo:document.getElementById("editName").value,cpf:document.getElementById("editCPF").value.replace(/[^\d]/g,""),email:document.getElementById("editEmail").value,telefone:document.getElementById("editPhone").value,endereco:document.getElementById("editAddress").value,etapa_atual:parseInt(document.getElementById("editStage").value),updated_at:new Date().toISOString()},o=JSON.parse(localStorage.getItem("leads")||"[]"),s=o.findIndex(d=>(d.id||d.cpf)===(this.editingLead.id||this.editingLead.cpf));if(s!==-1)o[s]=a,localStorage.setItem("leads",JSON.stringify(o)),this.closeEditModal(),this.loadLeads(),this.showNotification("Lead atualizado com sucesso!","success");else throw new Error("Lead não encontrado para atualização")}catch(t){console.error("❌ Erro ao atualizar lead:",t),this.showNotification("Erro ao atualizar lead: "+t.message,"error")}}async nextStage(e){console.log(`⏭️ Próxima etapa para lead: ${e}`),await this.updateLeadStage(e,1)}async prevStage(e){console.log(`⏮️ Etapa anterior para lead: ${e}`),await this.updateLeadStage(e,-1)}async updateLeadStage(e,t){try{const a=JSON.parse(localStorage.getItem("leads")||"[]"),o=a.findIndex(s=>(s.id||s.cpf)===e);if(o!==-1){const s=a[o].etapa_atual||1,d=Math.max(1,Math.min(26,s+t));a[o].etapa_atual=d,a[o].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(a)),this.loadLeads();const i=t>0?"avançada":"retrocedida";this.showNotification(`Etapa ${i} com sucesso! Nova etapa: ${d}`,"success"),console.log(`✅ Etapa atualizada para ${d}`)}else throw new Error("Lead não encontrado")}catch(a){console.error("❌ Erro ao atualizar etapa:",a),this.showNotification("Erro ao atualizar etapa: "+a.message,"error")}}async deleteLead(e){if(confirm("Tem certeza que deseja excluir este lead?")){console.log(`🗑️ Excluindo lead: ${e}`);try{const t=JSON.parse(localStorage.getItem("leads")||"[]"),a=t.filter(o=>(o.id||o.cpf)!==e);if(t.length===a.length)throw new Error("Lead não encontrado para exclusão");localStorage.setItem("leads",JSON.stringify(a)),this.loadLeads(),this.showNotification("Lead excluído com sucesso!","success")}catch(t){console.error("❌ Erro ao excluir lead:",t),this.showNotification("Erro ao excluir lead","error")}}}}let w=null;document.addEventListener("DOMContentLoaded",()=>{w=new k,window.adminPanel=w});
